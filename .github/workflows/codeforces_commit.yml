name: Codeforces Auto-Commit
on:
  schedule:
    - cron: "*/15 * * * *"  # Runs every 15 minutes
  workflow_dispatch:  # Allows manual trigger

jobs:
  fetch-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: pip install requests
        
      - name: Fetch recent Codeforces submissions
        run: |
          import requests
          import json
          import os
          from datetime import datetime
          import time
          
          # Your Codeforces handle
          HANDLE = "dummyDax"
          API_URL = f"https://codeforces.com/api/user.status?handle={HANDLE}&from=1&count=5"
          
          # Add retry mechanism for API requests
          MAX_RETRIES = 3
          for attempt in range(MAX_RETRIES):
              try:
                  response = requests.get(API_URL)
                  response.raise_for_status()  # Raise an error for bad status codes
                  data = response.json()
                  if data["status"] == "OK":
                      break
              except (requests.exceptions.RequestException, json.JSONDecodeError) as e:
                  if attempt == MAX_RETRIES - 1:
                      print(f"Error fetching Codeforces data: {e}")
                      exit(1)
                  time.sleep(2 ** attempt)  # Exponential backoff
          
          # Read stored submissions to avoid duplicates
          history_file = "submission_history.json"
          if os.path.exists(history_file):
              with open(history_file, "r") as f:
                  submitted_problems = json.load(f)
          else:
              submitted_problems = []
          
          new_submissions = []
          for submission in data["result"]:
              if submission["verdict"] == "OK":
                  problem_id = f"{submission['problem']['contestId']}_{submission['problem']['index']}"
                  if problem_id not in submitted_problems:
                      new_submissions.append(problem_id)
                      submitted_problems.append(problem_id)
          
          if not new_submissions:
              print("No new accepted solutions")
              exit(0)
          
          # Save updated history
          with open(history_file, "w") as f:
              json.dump(submitted_problems, f, indent=4)
          
          # Save problem IDs and timestamps
          log_file = "submissions/log.txt"
          os.makedirs("submissions", exist_ok=True)
          with open(log_file, "a") as f:
              for problem_id in new_submissions:
                  f.write(f"{problem_id} - Solved on {datetime.now()}\n")
          
          print(f"Logged {len(new_submissions)} new solved problems.")
        shell: python
        
      - name: Commit and push changes
        run: |
          git config --global user.name "GitDaksh"
          git config --global user.email "daksh.java.util@gmail.com"
          git add .
          git commit -m "Auto-commit Codeforces submissions $(date)" || exit 0
          git remote set-url origin https://${{ secrets.GH_TOKEN }}@github.com/GitDaksh/Codeforces.git
          git push
